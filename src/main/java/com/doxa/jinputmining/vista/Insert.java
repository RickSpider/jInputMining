/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.doxa.jinputmining.vista;

import javax.swing.JOptionPane;
import com.doxa.jinputmining.controller.GenerarInsert;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

/**
 *
 * @author BlackSpider
 */
public class Insert extends javax.swing.JPanel {

    /**
     * Creates new form Inserts
     */
    private String ruta;
    private String[] tablas = {"Familia", "Proveedor","Producto", "ProductosProveedor","Venta", "VentaDet","Compra","CompraDet"};

    public Insert(String ruta) {
        initComponents();
        this.ruta = ruta;
        this.ta_Sql.setLineWrap(true);
        this.ta_Sql.setEditable(false);
      
        for (String x : tablas) {

            this.cb_tablas.addItem(x);

        }
    }
    
    private void leerSQL(String name){
    
        StringBuilder sb = new StringBuilder();

         String path  = System.getProperty("user.dir").toString()+"\\sql\\"+name;
        
        try (BufferedReader br = Files.newBufferedReader(Paths.get(path))) {

            // read line by line
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line).append("\n");
            }

        } catch (IOException e) {
            System.err.format("IOException: %s%n", e);
        }
        
        this.ta_Sql.setText(sb.toString());
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta_Sql = new javax.swing.JTextArea();
        btn_Ejecutar = new javax.swing.JButton();
        cb_tablas = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        ta_Sql.setColumns(20);
        ta_Sql.setRows(5);
        jScrollPane1.setViewportView(ta_Sql);

        btn_Ejecutar.setText("Ejecutar");
        btn_Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EjecutarActionPerformed(evt);
            }
        });

        cb_tablas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_tablasItemStateChanged(evt);
            }
        });

        jLabel1.setText("Tabla:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_tablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Ejecutar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_tablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Ejecutar)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EjecutarActionPerformed
        // TODO add your handling code here:

        if (ruta.length() <= 0) {

            JOptionPane.showMessageDialog(this, "Selecciona un destino para la salida del archivo", "Error", JOptionPane.ERROR_MESSAGE);

            return;

        }

        if (this.ta_Sql.getText().length() <= 0) {

            JOptionPane.showMessageDialog(this, "Debes de Cargar un Script SQL para " + this.cb_tablas.getSelectedItem().toString(), "Error", JOptionPane.ERROR_MESSAGE);

            return;

        }
        
        //System.out.println(this.ta_Sql.getText());

        String ItemSelect = this.cb_tablas.getSelectedItem().toString();

        GenerarInsert gi = new GenerarInsert(ruta, this.ta_Sql.getText());

        switch (ItemSelect) {

            case "Familia": {

                gi.generarInsertFamilia();

                break;
            }
            
                case "Producto": {

                gi.generarInsertProducto();

                break;
            }
            
            case "Venta": {

                 this.leerSQL("venta.sql");

                break;
            }
            
            case "VentaDet": {

                 this.leerSQL("ventaDetalle.sql");

                break;
            }

        }

        // System.out.println(this.cb_tablas.getSelectedItem().toString());

    }//GEN-LAST:event_btn_EjecutarActionPerformed

    private void cb_tablasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_tablasItemStateChanged
        // TODO add your handling code here:
        
         String ItemSelect = this.cb_tablas.getSelectedItem().toString();


        switch (ItemSelect) {

            case "Familia": {

                 this.leerSQL("familia.sql");

                break;
            }
            
            case "Producto": {

                 this.leerSQL("producto.sql");

                break;
            }
            
            case "Venta": {

                 this.leerSQL("venta.sql");

                break;
            }
            
            case "VentaDet": {

                 this.leerSQL("ventaDetalle.sql");

                break;
            }

        }

        
    }//GEN-LAST:event_cb_tablasItemStateChanged

    public String getRuta() {
        return ruta;
    }

    public void setRuta(String ruta) {
        this.ruta = ruta;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Ejecutar;
    private javax.swing.JComboBox<String> cb_tablas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta_Sql;
    // End of variables declaration//GEN-END:variables
}
